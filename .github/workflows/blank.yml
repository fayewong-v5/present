# This is a basic workflow to help you get started with Actions

name: use matrix

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        cpu: ["amd64"]
        service: ["controller-manager", "admission-webhook", "metrics-apiserver", "keepalived-manager", "corefile-manager"]
        include:
          - cpu: "arm64"
            service: "keepalived-manager"
          - cpu: "arm64"
            service: "corefile-manager"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          if [ ${{ matrix.cpu }} == "amd64" ];then
              echo "::set-output name=targetImageTag::v1.0.0-${{ github.sha }}-${{ matrix.cpu }}"
              echo "::set-output name=dockerFilePath::./build/Dockerfile.${{ matrix.service }}.${{ matrix.cpu }}"
          else
              echo "::set-output name=targetImageTag::v1.0.0-${{ github.sha }}"
              echo "::set-output name=dockerFilePath::./build/Dockerfile.${{ matrix.service }}-ci.${{ matrix.cpu }}"
          fi
        id: prepare
      - run: |
          echo "targetImageTag is ${{ steps.prepare.outputs.targetImageTag }}"
          echo "dockerFilePath is ${{ steps.prepare.outputs.dockerFilePath }}"
